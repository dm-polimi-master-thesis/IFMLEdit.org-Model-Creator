/*jslint node: true */
"use strict";

var url = require('url'),
    merge = require('merge');

var target = {
    targetChain: {
<% for (var i = 0 ; i < targetActives.length; i++){ -%>
       <%= i !== 0 ? ',' : '' %>'<%= targetActives[i].xor %>': '<%= targetActives[i].child %>'
<% } -%>
    },
    broken: {
<% for (var i = 0 ; i < broken.length; i++){ -%>
       <%= i !== 0 ? ',' : '' %>'<%= broken[i] %>': true
<% } -%>
    }
};

function computeTarget(context, source) {
<% if (outcoming) { -%>
        var targetInputs = {
<%     for (var i = 0 ; i < outcoming.bindings.length; i++){
           if (outcoming.type === 'details') { -%>
            <%= i !== 0 ? ',' : '' %>'<%= outcoming.target %>': source['<%= outcoming.bindings[i].output %>']
<%         }
           if (outcoming.type === 'list') { -%>
            <%= i !== 0 ? ',' : '' %>'<%= outcoming.target %>$f$<%= outcoming.bindings[i].input %>': source['<%= outcoming.bindings[i].output %>']
<%         }
           if (outcoming.type === 'form') { -%>
            <%= i !== 0 ? ',' : '' %>'<%= outcoming.target %>$f$<%= outcoming.bindings[i].input %>': source['<%= outcoming.bindings[i].output %>']
<%         }
           if (outcoming.type === 'action') { -%>
            <%= i !== 0 ? ',' : '' %>'<%= outcoming.target %>$f$<%= outcoming.bindings[i].input %>': source['<%= outcoming.bindings[i].output %>']
<%
           }
       } -%>
        },
        query;
<% } else { -%>
    var query;
<% }
   if (isSameTopLevel) { -%>
    query = merge(context.elements['<%= currentTopLevel %>'].toQuery(target), target.targetChain);
<% } else { -%>
    query = target.targetChain;
<% } -%>
<% if (outcoming) { -%>
    return url.format({pathname: '/<%= path %>', query: merge(query, targetInputs)})
<% } else { -%>
    return  url.format({pathname: '/<%= path %>', query: query})
<% } -%>
};

computeTarget.id = '<%= id %>';

module.exports = computeTarget;
